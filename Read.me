GDCC 2021 DataComp 12 Days left till 15th Oct 21 :P
FoldingCircles 2021   Brett Palmer-AKA- Mince

4 entries May only be able to Complete 1 or 2 before the deadline of 15th October 2021, 
only Had Few weeks as Joined very late.(think Sep 15th 2021)
and at time of writing this have spent a total of 9 days(5 to 10 hours per day) est less than 90hrs

I have looked at current Compression Types and Come up with 4 New Type of Compression.
My Mates always saying someone must have thought of it already but from what I have been able to research 
My four entries are new.

Not including AI stuff Not even looked at any them as in My View AI Don't Count without a doubt 
AI will beat humans Eventually 
AI will beat All humanity but right now there is a new need for data compression. 



My Entries -2021....or if not ready for 12 days from now guess have to go into -2022

1.) My Fast Entry is FCcs = ChangeStreaming!
    Yet To be Written Wil not take long its super simple stream data in count till change 
    and represent>Out.(bit reduction Similar to Run Length But better!

2.) My High Compression Entry (A) FC_PB = Pattern Builder!! 
     First tests been getting 25% to 350% Compression

3.) My Extra high compression Entry(B) FC_PB_Matrix!!
:- My Most Powerful Compression Is Slow but Powerful Cant Imagine Any other Compression system to be able to 
   beat it.(Guess we will see)

4.) My Last Entry is 64>256 bit positional notation to Pic to bin System. FC_PNPicCompression
     Any1 from the old days knows how the characters on any computer are made using 8bit binary peek & poke 
     remember them days?
     If u can store 8*8 bit as a chr and u can then creating every possible variant as a permanent key will be a 
     bonus. forget 0-9 a-z A-Z and think of barcode type pics all logically constructed to have a desired Fixed Value.
     The Key will be a set of data kept in the Compression / De-compression Software So the Compressed file will 
     not have to even have a header!, let alone have key data needed to decompress the file.
     the possibilities are limited to Memory only.
     This ver will only use 8*8 Matrix with a total of 8^8^8^8^8^8^8^8 ..Wait don't think in terms of value think in 
     terms of positional notation and boxes ....(1,844674400000000000000000000)......:) take away the first digit(or 
     Container) because the most the far left box is a one(1) and therefore can never hold more than 0 or 1 && 
     therefor is no good.
     So...
     left box can hold is a 0 or 1!. so remove!.  
     Now you are left with Lots of Containers (99999999999999999999999999 that can store 0-9=10*26,Awsome!
     I may need to use 128bit registers for this to work 100% in python, I may write it in C or ASM Not sure and 
     running low on Days to Complete
     Computers tend to use 256(0-255) as 8 bit so this is a mind bender but should be possible to represent each of 
     the Keys as Pictures..... Not sure if this will work but if it does it could Compress by 25:1 some 2500% 
     Been Creating key as I type so far the key is 21gig and only 13% the way through.
     Worse case I can find the most common Patterns and rank them in 256 order 0 to 255 they would reduce Files Quite well.
     The Major down size is the time it takes to gen the keys It would make sense on Quantum Computers 
     to gen the keys on the fly as can be generated in one iteration. 
     but I only have a classical computer to play with atm. For Speed this huge key must be stored as data inside App 
     Con Huge App
     Pro Tiny File

